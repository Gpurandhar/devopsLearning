Yes, DevOps engineers can certainly write code, especially when it comes to automating deployment processes, managing infrastructure, and creating tools for monitoring and managing systems. DevOps is a combination of development and operations, and writing code is a crucial aspect of the "development" part.

DevOps engineers often write code for tasks like:

Infrastructure as Code (IaC): Creating scripts or templates (using tools like Terraform or Ansible) to define and provision infrastructure resources such as servers, databases, and networking components.

Configuration Management: Writing scripts to configure and manage software on servers and other infrastructure components. This can involve tools like Puppet, Chef, or Ansible.

Continuous Integration/Continuous Deployment (CI/CD): Creating pipelines and scripts to automate the build, test, and deployment of applications to different environments.

Monitoring and Logging: Developing scripts and tools to monitor the health and performance of systems, gather metrics, and manage logs.

Automation and Orchestration: Writing code to automate repetitive tasks and orchestrate complex workflows, ensuring efficient and reliable processes.

Containerization: Using tools like Docker to package applications and their dependencies into containers, which can be deployed consistently across different environments.

Version Control: Writing code involves using version control systems like Git to manage and track changes in code, scripts, and configurations.

Custom Tools: DevOps engineers might develop custom tools, scripts, or utilities to solve specific challenges in their organization's infrastructure and deployment processes.

In summary, coding is an integral part of a DevOps engineer's skillset, as it enables them to automate and streamline processes, ensuring efficient development, deployment, and operations of software systems.